@model Facilit.Models.Usuario
@if (!String.IsNullOrEmpty(TempData["Mensagem"] as string))
{
    <div id="mensagem">
        <div class="alert alert-danger">
            @TempData["Mensagem"]
        </div>
    </div>
}

<script>
    setTimeout(function () {
        var caixa_mensagem = document.getElementById('mensagem');
        if (caixa_mensagem) {
            caixa_mensagem.style.display = 'none';

        }

    }, 2000);
</script>

@{
    ViewBag.Title = "Editar usuário";
}
@using (Html.BeginForm("atualizarUsuario", "Usuario", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <header>
        <link rel="stylesheet" href="~/Scripts/Estilo.css"/>
    </header>

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <h2>Editar usuário</h2>
        <div class="row">
            <div class="col-md-6">

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome_completo, "Nome completo:", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nome_completo, new { htmlAttributes = new { @class = "campo" } })
                            @Html.ValidationMessageFor(model => model.Nome_completo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, "E-mail:", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "campo" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome_Usuario, "Nome de usuário:", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nome_Usuario, new { htmlAttributes = new { @class = "campo" } })
                            @Html.ValidationMessageFor(model => model.Nome_Usuario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Senha_Usuario, "Senha:", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                           @Html.EditorFor(model => model.Senha_Usuario, new { htmlAttributes = new { @class = "campo" } })
                            @Html.ValidationMessageFor(model => model.Senha_Usuario, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>

               

            </div>
        </div>
            <br />
            <div class="form-group">

                <div class="col-md-offset-2 col-md-10">

                    @Html.ActionLink("Voltar", "Perfis_usuario", "Usuario", null, new { @class = "btn btn-secondary" })
                    <input type="submit" value="Atualizar" class="btn btn-success" />

                </div>


            </div>

        </div>
}
